<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <decisions>
        <name>Chargeback_Resolution</name>
        <label>Chargeback Resolution</label>
        <locationX>534</locationX>
        <locationY>1427</locationY>
        <defaultConnector>
            <targetReference>Process_Liability_Closure</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Process Liability</defaultConnectorLabel>
        <rules>
            <name>Yes2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Yes</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Yes</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Closure</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>Noasdf</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Close</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Close</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Chargeback_Response_Review</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_For_CloseConditions</name>
        <label>Check For CloseConditions</label>
        <locationX>622</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>Manual_Call_Followup</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Call</defaultConnectorLabel>
        <rules>
            <name>Close</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Favorable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Yes</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Close_Case</targetReference>
            </connector>
            <label>Close</label>
        </rules>
    </decisions>
    <decisions>
        <name>Issue_Provisional_Credit</name>
        <label>Issue Provisional Credit</label>
        <locationX>336</locationX>
        <locationY>395</locationY>
        <defaultConnector>
            <targetReference>Generate_Comms</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Friendly</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Yes</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Yes</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Issue_Provisional_Credit_To_Core</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>Friendly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Favorable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Yes</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Notifications</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Merchant_Response</name>
        <label>Merchant Response</label>
        <locationX>336</locationX>
        <locationY>1211</locationY>
        <defaultConnector>
            <targetReference>MCOM_Initiation</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Unfavorable</defaultConnectorLabel>
        <rules>
            <name>Favorable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Yes</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Yes</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Closure</targetReference>
            </connector>
            <label>Favorable</label>
        </rules>
    </decisions>
    <interviewLabel>Dispute Roadmap {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Dispute Roadmap</label>
    <orchestratedStages>
        <name>Chargeback_Response_Review</name>
        <label>Chargeback Response Review</label>
        <locationX>490</locationX>
        <locationY>1535</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>MCOM_Initiation</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Review_Response</name>
            <actionName>Add_Person_to_Account</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <stringValue>fmisischia@fmisischia-231212-286.demo</stringValue>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Review Response</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Close_Case</name>
        <label>Close Case</label>
        <locationX>490</locationX>
        <locationY>719</locationY>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Process_Closure</name>
            <actionName>case_swarming__Close_Selected_Swarm</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>recordId</name>
            </inputParameters>
            <inputParameters>
                <name>Swarm_To_Be_Closed</name>
            </inputParameters>
            <inputParameters>
                <name>Should_Archive_Channel</name>
            </inputParameters>
            <label>Process Closure</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Closure</name>
        <label>Recovery &amp; Closure</label>
        <locationX>336</locationX>
        <locationY>1919</locationY>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Generate_And_Send</name>
            <actionName>benefits__Issue_Voucher</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>MemberBenefitId</name>
            </inputParameters>
            <inputParameters>
                <name>VoucherDefinitionName</name>
            </inputParameters>
            <label>Generate And Send Closure Response</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
        <stageSteps>
            <name>Close_Dispute_Case</name>
            <actionName>benefits__Issue_Voucher</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>MemberBenefitId</name>
            </inputParameters>
            <inputParameters>
                <name>VoucherDefinitionName</name>
            </inputParameters>
            <label>Close Dispute Case</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Generate_Comms</name>
        <label>Generate Comms</label>
        <locationX>622</locationX>
        <locationY>503</locationY>
        <connector>
            <targetReference>Check_For_CloseConditions</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Generate_Letter_Send_To_Printer</name>
            <actionName>SDO_Case_SendSurvey</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>var_CaseId</name>
            </inputParameters>
            <label>Generate Letter/Send To Printer</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
        <stageSteps>
            <name>Wait</name>
            <actionName>benefits__Issue_Free_Product_Sample</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>MemberBenefitId</name>
            </inputParameters>
            <inputParameters>
                <name>PricebookName</name>
            </inputParameters>
            <inputParameters>
                <name>ProductName</name>
            </inputParameters>
            <label>Wait 15 Days</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Invoke_Provisional_Credit_Rules</name>
        <label>Initial Investigation</label>
        <locationX>336</locationX>
        <locationY>287</locationY>
        <connector>
            <targetReference>Issue_Provisional_Credit</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Determine_Provisional_Credit</name>
            <actionName>benefits__Issue_Voucher</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>MemberBenefitId</name>
            </inputParameters>
            <inputParameters>
                <name>VoucherDefinitionName</name>
            </inputParameters>
            <label>Determine Provisional Credit</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
        <stageSteps>
            <name>Initial_Investigation</name>
            <actionName>FSC_Fraud_Investigation_Flow</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <stringValue>fmisischia@fmisischia-231212-286.demo</stringValue>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>Var_FraudType</name>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Initial Investigation</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Issue_Provisional_Credit_To_Core</name>
        <label>Issue Provisional Credit To Core</label>
        <locationX>50</locationX>
        <locationY>503</locationY>
        <connector>
            <targetReference>Notifications</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Invoke_Provisional_Credit_API_Call</name>
            <actionName>benefits__Issue_Voucher</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>MemberBenefitId</name>
            </inputParameters>
            <inputParameters>
                <name>VoucherDefinitionName</name>
            </inputParameters>
            <label>Invoke Provisional Credit API Call</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Manual_Call_Followup</name>
        <label>Manual Call Followup</label>
        <locationX>754</locationX>
        <locationY>719</locationY>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Call_To_Confirm</name>
            <actionName>case_swarming__Begin_Swarming</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <stringValue>fmisischia@fmisischia-231212-286.demo</stringValue>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>recordId</name>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Call To Confirm</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>MCOM_Initiation</name>
        <label>MCOM Initiation</label>
        <locationX>534</locationX>
        <locationY>1319</locationY>
        <connector>
            <targetReference>Chargeback_Resolution</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Initiate_Chargeback</name>
            <actionName>benefits__Issue_Voucher</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>MemberBenefitId</name>
            </inputParameters>
            <inputParameters>
                <name>VoucherDefinitionName</name>
            </inputParameters>
            <label>Initiate Chargeback</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Notifications</name>
        <label>Notifications</label>
        <locationX>336</locationX>
        <locationY>1103</locationY>
        <connector>
            <targetReference>Merchant_Response</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Generate</name>
            <actionName>benefits__Issue_Voucher</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>MemberBenefitId</name>
            </inputParameters>
            <inputParameters>
                <name>VoucherDefinitionName</name>
            </inputParameters>
            <label>Generate &amp; Send Ack To Customer</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
        <stageSteps>
            <name>Notify_Merchant_Via_Ethoca</name>
            <actionName>benefits__Issue_Voucher</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>MemberBenefitId</name>
            </inputParameters>
            <inputParameters>
                <name>VoucherDefinitionName</name>
            </inputParameters>
            <label>Notify Merchant Via Ethoca</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <name>Process_Liability_Closure</name>
        <label>Process Liability &amp; Closure</label>
        <locationX>754</locationX>
        <locationY>1535</locationY>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <name>Presentment</name>
            <actionName>Create_Benefits_and_Filters</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>NewRebateType</name>
            </inputParameters>
            <inputParameters>
                <name>SrcRebateType</name>
            </inputParameters>
            <label>Presentment</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
        <stageSteps>
            <name>Approval</name>
            <actionName>Card_Activation_Package_Clone</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <stringValue>fmisischia@fmisischia-231212-286.demo</stringValue>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>CaseId</name>
            </inputParameters>
            <inputParameters>
                <name>CaseNumber</name>
            </inputParameters>
            <inputParameters>
                <name>CaseStatus</name>
            </inputParameters>
            <inputParameters>
                <name>ContactId</name>
            </inputParameters>
            <inputParameters>
                <name>FinancialAccountId</name>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Approval</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
        <stageSteps>
            <name>Closure2</name>
            <actionName>case_swarming__Close_Selected_Swarm</actionName>
            <actionType>stepBackground</actionType>
            <entryConditionLogic>and</entryConditionLogic>
            <inputParameters>
                <name>recordId</name>
            </inputParameters>
            <inputParameters>
                <name>Swarm_To_Be_Closed</name>
            </inputParameters>
            <inputParameters>
                <name>Should_Archive_Channel</name>
            </inputParameters>
            <label>Closure</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
        </stageSteps>
    </orchestratedStages>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Orchestrator</processType>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Invoke_Provisional_Credit_Rules</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>TESTDISPUTE</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
</Flow>
